{"version":3,"sources":["pages/Home/Home.module.scss","components/Canvas/Canvas.module.scss","components/Button/Button.module.scss","image-context.js","components/Canvas/Canvas.js","components/Button/Button.js","pages/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ImageContext","React","createContext","createCombinations","arr","prefix","length","reduce","combinedArray","item","concat","slice","ImageProvider","props","useState","imgData","setImgData","useEffect","rArray","i","push","rgbArray","pixelArray","Uint8ClampedArray","count","arrTemp","split","Provider","value","changePixelData","tempData","reverse","children","Canvas","canvasRef","useRef","useContext","canvas","current","width","height","context","getContext","imageData","ImageData","putImageData","ref","className","styles","Button","onClick","Home","Home__Heading","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,cAAgB,8B,iBCA5DD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,OAAS,yB,sJCErBC,EAAeC,IAAMC,cAAc,MASnCC,EAAqB,SAArBA,EAAsBC,EAAKC,GAI7B,OAHAA,EAASA,GAAU,GAGA,IAAfD,EAAIE,OAAqBD,EAETD,EAAI,GAAGG,QAAO,SAACC,EAAeC,GAE9C,OAAOD,EAAcE,OAAOP,EAAmBC,EAAIO,MAAM,GAAIN,EAASI,EAAO,QAC9E,KAUDG,EAAgB,SAACC,GAAW,IAAD,EAECC,mBAAS,MAFV,mBAEtBC,EAFsB,KAEbC,EAFa,KAK7BC,qBAAU,WAGN,IAFA,IAAMC,EAAS,GAENC,EAAE,EAAGA,GAAK,IAAKA,GAAG,EACb,MAANA,EACAD,EAAOE,KAAK,KAEZF,EAAOE,KAAKD,GAIpB,IAAIE,EAAW,CAACH,EAAQA,EAAOP,QAASO,EAAOP,SAE/CU,EAAWlB,EAAmBkB,GAU9B,IANA,IAAIC,EAAa,IAAIC,kBAAkB,QAEnCC,EAAQ,EAERC,EAAU,GAELN,EAAI,EAAGA,EAAIG,EAAWhB,OAAQa,GAAK,EAExCM,EAAUJ,EAASG,GAAOE,MAAM,KAChCJ,EAAWH,EAAI,GAAKM,EAAQ,GAC5BH,EAAWH,EAAI,GAAKM,EAAQ,GAC5BH,EAAWH,EAAI,GAAKM,EAAQ,GAC5BH,EAAWH,EAAI,GAAK,IACpBK,IAEJR,EAAWM,KACZ,IAOH,OACI,cAACtB,EAAa2B,SAAd,CAAuBC,MAAO,CAACb,QAASA,EAASc,gBAN7B,WACpB,IAAIC,EAAWf,EAAQJ,QACvBK,EAAWc,EAASC,aAIpB,SACKlB,EAAMmB,YCvCJC,EA7BA,WAGX,IAAMC,EAAYC,iBAAO,MAGpBpB,EAAWqB,qBAAWpC,GAAtBe,QAEDsB,EAASH,EAAUI,QAGvB,GAAID,EAAQ,CAERA,EAAOE,MAAQ,IACfF,EAAOG,OAAS,IAChB,IAAIC,EAAUJ,EAAOK,WAAW,MAChC,GAAI3B,EAAS,CACT,IAAI4B,EAAY,IAAIC,UAAU7B,EAAS,KAEvC0B,EAAQI,aAAaF,EAAW,EAAG,IAG3C,OACI,wBAAQG,IAAKZ,EAAWa,UAAWC,IAAOf,U,gBCjBnCgB,EARA,WAAM,IAEVpB,EAAmBO,qBAAWpC,GAA9B6B,gBACP,OACI,wBAAQkB,UAAWC,IAAOC,OAAQC,QAASrB,EAA3C,6BCUOsB,EAZF,WACT,OACI,sBAAKJ,UAAWC,IAAOG,KAAvB,UACI,oBAAIJ,UAAWC,IAAOI,cAAtB,yDAGA,cAAC,EAAD,IACA,cAAC,EAAD,QCJGC,EANH,WACV,OACE,cAAC,EAAD,KCGWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.546e0fe1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__20gYL\",\"Home__Heading\":\"Home_Home__Heading__j7YMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Canvas\":\"Canvas_Canvas__1VPYJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2BYYQ\"};","import React, {useState, useEffect} from 'react';\n\n// Initialize the Context Object \nconst ImageContext = React.createContext(null);\n\n/** \n  * @desc Crates all the possible combinations of the array values provided in an array\n  * For Example - if input = [[a], [b,c]], then output = [\"a+b+\", \"a+c+\"]\n  * @param arr - Array containing arrays to be combined \n  * @param prefix - Default value for recuresion, need not to be provided\n  * @returns A Button component for the change of pattern\n*/\nconst createCombinations = (arr, prefix) => {\n    prefix = prefix || ''; \n\n    // Base condition\n    if (arr.length === 0) return prefix; \n    \n    let combinedArray = arr[0].reduce((combinedArray, item) => { \n        // + is a demarker for a value end for r, g and b\n        return combinedArray.concat(createCombinations(arr.slice(1), prefix + item + \"+\")); \n    }, []); \n\n    return combinedArray;\n}\n\n/** \n  * @desc Provides the Image data Context to the App\n  * Wraps Image provider for providing the data and a function to manipulate this data\n  * @returns Context provider with the required values\n*/\nconst ImageProvider = (props) => {\n\n    const [imgData, setImgData] = useState(null);\n\n    // This will run only on first mount \n    useEffect(() => {\n        const rArray = [];\n\n        for (let i=8; i <= 256; i+=8) {\n            if (i === 256) {\n                rArray.push(255);\n            } else {\n                rArray.push(i);\n            }   \n        }\n\n        let rgbArray = [rArray, rArray.slice(), rArray.slice()];\n\n        rgbArray = createCombinations(rgbArray);\n\n        // 131072 = 32768 * 4 - This array represents 32768 pixels\n        // 4 paired values starting from 0 represent r, g, b and a values of a pixel color\n        let pixelArray = new Uint8ClampedArray(131072);\n\n        let count = 0;\n\n        let arrTemp = [];\n\n        for (let i = 0; i < pixelArray.length; i += 4) {\n            // Example Split - ['8', '8', '8', '']\n            arrTemp = rgbArray[count].split('+');\n            pixelArray[i + 0] = arrTemp[0];     // R value\n            pixelArray[i + 1] = arrTemp[1];     // G value\n            pixelArray[i + 2] = arrTemp[2];   // B value\n            pixelArray[i + 3] = 255;  // A value\n            count++;\n        }\n        setImgData(pixelArray);\n    }, []);\n\n    const changePixelData = () => {\n        let tempData = imgData.slice();\n        setImgData(tempData.reverse());\n    }\n\n    return (\n        <ImageContext.Provider value={{imgData: imgData, changePixelData}}>\n            {props.children}\n        </ImageContext.Provider>\n    )\n}\n\nexport  {ImageProvider, ImageContext};\n","import React, {useRef, useEffect, useContext} from 'react';\nimport styles from './Canvas.module.scss';\nimport {ImageContext} from '../../image-context';\n\n/** \n  * @desc Hanles the canvas for the display of the image\n  * Includes Canvas Drawing with pixels\n  * The size of the canvas has been set to 256X128px\n  * @returns canvas component with the image in it\n*/\nconst Canvas = () => {\n\n    // Used to refer the canvas element for drawing and clearing\n    const canvasRef = useRef(null);\n\n    // Get image data from Context\n    let {imgData} = useContext(ImageContext);\n\n    let canvas = canvasRef.current;\n\n    // Checking canvas for first render\n    if (canvas) {\n        // canvas dimensions - 256X128px\n        canvas.width = 256;\n        canvas.height = 128;\n        let context = canvas.getContext('2d');\n        if (imgData) {\n            let imageData = new ImageData(imgData, 256);\n            // Draw Image in Canvas\n            context.putImageData(imageData, 0, 0);\n        } \n    }\n    return (\n        <canvas ref={canvasRef} className={styles.Canvas}>\n\n        </canvas>\n    );\n};\n\nexport default Canvas;\n","import React, {useContext} from 'react';\nimport styles from './Button.module.scss';\nimport {ImageContext} from '../../image-context';\n\n/** \n  * @desc Toggle Button for changing the pattern of the image\n  * @returns A Button component for the change of pattern\n*/\nconst Button = () => {\n    // Get the change function provided by context\n    const {changePixelData} = useContext(ImageContext);\n    return (\n        <button className={styles.Button} onClick={changePixelData}>Toggle Pattern</button>\n    );\n}\n\nexport default Button;\n","import React from 'react';\nimport styles from './Home.module.scss';\nimport Canvas from '../../components/Canvas/Canvas';\nimport Button from '../../components/Button/Button';\n\n\n/** \n  * @desc Handles compoenents for the Home page of the application\n  * @returns all the componenets to be included in the home page\n*/\nconst Home = () => {\n    return (\n        <div className={styles.Home}>\n            <h1 className={styles.Home__Heading} >\n                Each Pixel of this image has a unique Color\n            </h1>\n            <Canvas />\n            <Button />\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport Home from './pages/Home/Home';\n\n/** \n  * @desc Root component of the Application\n  * @returns Renders all the pages on the application \n*/\nconst App = () => {\n  return (\n    <Home />\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// Include Styles for the entire app\nimport './sass/main.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {ImageProvider} from './image-context';\n\n// The access to the context provider has been provided to the entire app\nReactDOM.render(\n  <React.StrictMode>\n    <ImageProvider>\n      <App />\n    </ImageProvider> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}